
#def four(self,n):return [(a+c, b+d) for ((a,b),(c,d)) in list(zip(self.dirs, [n]*4))]
for _ in range(1000):
    dims=(20,50)
    M=Maze(*dims)#;print(M.fns(M.mid,()))
    F,P=M.map(M.mid,M.fns(M.mid,()))
    P0=M.djik(M.mid,F)[1]
    assert(P0[-1]==F)
    assert(P[0]==F)
    assert(P0!=[])


This doesn't work:

        match side:
            case 0: 
                while(self.B[0][(s:=random.randint(0,self.C-1))]!=0):s+=1
                s=(0,s)
            case 1: 
                while(self.B[s:=random.randint(0,self.R-1)][-1]!=0):s+=1
                s=(s,self.C-1)
            case 2: 
                while(self.B[-1][(s:=random.randint(0,self.R-1))])!=0:s+=1
                s=(self.R-1,s)
            case 3: 
                while(self.B[s:=random.randint(0,self.R-1)][0]!=0):s+=1
                s=(s,0)
        for _ in range(self.C):
            self.B[0][_]=1
            self.B[-1][_]=1
        for _ in range(self.R):
            self.B[_][0]=1
            self.B[_][-1]=1
        self.B[s[0]][s[1]]=0;print('-----------',s)
    #return s


